create local repository: git init

    -Initialized empty repository.
    -bydefault it will create master branch. to get a branch named main we need to run "git init -b main"

.git folder is the local repository or called as staging area.

add file to staging area: git add <file_name>

save in staging area/commit a file: git commit -m "commit_message"

commit without stage: git commit -a -m "..."

see the difference between commited file and working directory file: git diff/ git diff --staged

remove a file from git: git rm --cached <file_name>

to create a main branch : git branch -M main

CONNECT TO THE REMOTE REPOSITORY:
=================================
git remote add origin https://github.com/Rajesh-122502/springboot-project.git

we are setting "origin" as the name for the remote repository i.e. the URL mentioned.

push to remote repository:
git push -u origin main

-u sets up the upstream means for the subsequent push or pull we need to enter only the command "git push", "git pull".
this coomand means we are pushing local commits from the branch named "main" to the remote repository named "origin".

BRANCH:
=======
create a new branch: git checkout -b <branch_name> / git checkout --branch <branch_name>
switch branch : git checkout <branch_name> / git switch <branch_name>
show all the branches available: git branch
delete a branch: git branch -d <branch_name>
push new branch to remote repository: git push origin <branch_name>
merge two branches: git merge main feature1
cancel merge: git merge --quit
--------------------------------
STASH
=====

to stash: git stash- it will ave the changes for future Reference
to see the stash list- git stash list
apply the stash again- git stash apply

FORK AND PULL REQUEST
======================
suppose rajesh is the main user for repository and aksh is the second user and wants to make changes in the same repository. Then akash need to go to rajesh's github profile and navigate to the particular project repository, then fork it. Fork will place the repositoryin akash's github account.

Then akash will clone the project to his local machine, make the changes commit and push the changes to github. Now the changes are there is akash's github repository. Then he will go to pull request tab and raise a pull request.

Then rajesh will got to his pull request tab and review the code changes and then merge the pull request.

In this way both can contribute to the same project.